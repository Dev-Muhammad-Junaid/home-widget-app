name: Sync Flutterflow to Main

on:
  push:
    branches:
      - flutterflow

permissions:
  contents: write
  actions: read

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Debug - Show current branch and status
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Recent commits on flutterflow:"
          git log --oneline -5 flutterflow
          echo "Recent commits on main:"
          git log --oneline -5 origin/main

      - name: Generate iOS HomeWidget Extension Files
        run: |
          echo "🍎 Generating iOS HomeWidget Extension files..."
          chmod +x scripts/setup_homewidget_ios.sh
          ./scripts/setup_homewidget_ios.sh
          
          # Check if files were generated
          if [ -d "ios/HomeWidgetExtension" ]; then
            echo "✅ iOS HomeWidget Extension files generated successfully"
            echo "Generated files:"
            find ios/HomeWidgetExtension -type f -name "*.swift" -o -name "*.plist" -o -name "*.entitlements" -o -name "*.intentdefinition" | sort
          else
            echo "⚠️  No iOS extension directory found, but continuing..."
          fi

      - name: Check for iOS Widget Extension changes
        id: check-widget-changes
        run: |
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            echo "widget_changes=true" >> $GITHUB_OUTPUT
            echo "✨ iOS HomeWidget Extension files were created/updated:"
            git status --porcelain
          else
            echo "widget_changes=false" >> $GITHUB_OUTPUT
            echo "📱 No iOS HomeWidget Extension changes detected"
          fi

      - name: Commit iOS Widget Extension files
        if: steps.check-widget-changes.outputs.widget_changes == 'true'
        run: |
          git commit -m "🍎 Auto-generate iOS HomeWidget Extension files
          
          Generated by FlutterFlow sync workflow:
          - HomeWidgetExtension.swift (SwiftUI widget implementation)
          - Info.plist (Widget extension configuration)
          - Intents.intentdefinition (Configurable widget support)
          - HomeWidgetExtension.entitlements (App Group permissions)
          - Updated Runner.entitlements (App Group configuration)
          - Enhanced Flutter integration files
          
          This ensures iOS home widget support is always available
          even when FlutterFlow exports don't include these files."

      - name: Checkout main branch
        run: |
          git fetch origin main
          git checkout main

      - name: Merge flutterflow into main
        run: |
          echo "Merging flutterflow into main..."
          git merge --no-ff origin/flutterflow -m "🤖 Automated merge from flutterflow branch
          
          Includes auto-generated iOS HomeWidget Extension files:
          $(if [ -d 'ios/HomeWidgetExtension' ]; then echo '✅ iOS Widget Extension ready'; else echo '📱 Standard FlutterFlow sync'; fi)"

      - name: Push changes to main
        run: |
          echo "Pushing merged changes to main..."
          git push origin main

      - name: Success notification
        run: |
          echo "✅ Successfully merged flutterflow into main!"
          echo "Latest commit on main:"
          git log --oneline -1

      - name: Create workflow summary
        run: |
          echo "## 🎉 FlutterFlow Sync Completed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 iOS HomeWidget Extension Status:" >> $GITHUB_STEP_SUMMARY
          if [ -d "ios/HomeWidgetExtension" ]; then
            echo "✅ **iOS HomeWidget Extension files are ready!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "#### Generated Files:" >> $GITHUB_STEP_SUMMARY
            echo "- 🎯 \`HomeWidgetExtension.swift\` - SwiftUI widget implementation" >> $GITHUB_STEP_SUMMARY
            echo "- 📄 \`Info.plist\` - Widget extension configuration" >> $GITHUB_STEP_SUMMARY
            echo "- 🎛️ \`Intents.intentdefinition\` - Configurable widget support" >> $GITHUB_STEP_SUMMARY
            echo "- 🔐 \`HomeWidgetExtension.entitlements\` - App Group permissions" >> $GITHUB_STEP_SUMMARY
            echo "- ⚙️ Updated Runner entitlements and configuration files" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "#### Widget Features:" >> $GITHUB_STEP_SUMMARY
            echo "- 📏 **Multiple sizes**: Small, Medium, Large widgets" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 **Real-time updates**: Data sync from Flutter app" >> $GITHUB_STEP_SUMMARY
            echo "- ⚙️ **Configurable**: Users can customize title and description" >> $GITHUB_STEP_SUMMARY
            echo "- 🎨 **Native SwiftUI**: Beautiful, native iOS design" >> $GITHUB_STEP_SUMMARY
          else
            echo "📱 **Standard FlutterFlow sync** - No iOS extension files generated" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔧 Next Steps for iOS Development:" >> $GITHUB_STEP_SUMMARY
          echo "1. **Open Xcode**: \`cd ios && open Runner.xcworkspace\`" >> $GITHUB_STEP_SUMMARY
          echo "2. **Add Widget Target**: Create HomeWidgetExtension target in Xcode" >> $GITHUB_STEP_SUMMARY
          echo "3. **Configure App Groups**: Enable \`group.com.example.homewidget\` in both targets" >> $GITHUB_STEP_SUMMARY
          echo "4. **Test Widget**: Build and add widget to iOS home screen" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Sync Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Source**: \`flutterflow\` branch" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: \`main\` branch" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: $(git log --oneline -1)" >> $GITHUB_STEP_SUMMARY 
